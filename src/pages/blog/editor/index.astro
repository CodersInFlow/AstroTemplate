---
export const prerender = false;

import '../../../styles/global.css';
import Layout from '../../../layouts/Layout.astro';

// Check authentication
const token = Astro.cookies.get('auth-token');
if (!token) {
  return Astro.redirect('/blog/editor/login');
}

// Fetch user info
const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:8749';
const userResponse = await fetch(`${API_URL}/api/auth/me`, {
  headers: {
    'Cookie': `auth-token=${token.value}`
  }
});

if (!userResponse.ok) {
  return Astro.redirect('/blog/editor/login');
}

const user = await userResponse.json();

// Fetch recent posts
const postsResponse = await fetch(`${API_URL}/api/posts`, {
  headers: {
    'Cookie': `auth-token=${token.value}`
  }
});
const postsData = postsResponse.ok ? await postsResponse.json() : null;
const posts = Array.isArray(postsData) ? postsData : [];
---

<Layout title="Editor Dashboard">
  <div class="min-h-screen bg-gray-900">
    <!-- Editor Header -->
    <header class="bg-gray-800 border-b border-gray-700">
      <div class="container mx-auto px-4 py-4">
        <div class="flex justify-between items-center">
          <h1 class="text-xl font-bold text-white">Content Editor</h1>
          <div class="flex items-center gap-4">
            <span class="text-gray-400">Welcome, {user.name}</span>
            <a href={`/blog/editor/users/edit/${user.id}`} class="text-blue-400 hover:text-blue-300">
              Settings
            </a>
            <a href="/blog/editor/change-password" class="text-blue-400 hover:text-blue-300">
              Change Password
            </a>
            <button id="logoutBtn" class="text-red-400 hover:text-red-300">
              Logout
            </button>
          </div>
        </div>
      </div>
    </header>

    <!-- Editor Navigation -->
    <nav class="bg-gray-800 border-b border-gray-700">
      <div class="container mx-auto px-4">
        <div class="flex gap-6">
          <a href="/blog/editor" class="py-3 border-b-2 border-blue-500 text-blue-400">Dashboard</a>
          <a href="/blog/editor/posts" class="py-3 border-b-2 border-transparent text-gray-400 hover:text-gray-300">Posts</a>
          <a href="/blog/editor/categories" class="py-3 border-b-2 border-transparent text-gray-400 hover:text-gray-300">Categories</a>
          {user.role === 'admin' && (
            <a href="/blog/editor/users" class="py-3 border-b-2 border-transparent text-gray-400 hover:text-gray-300">Users</a>
          )}
        </div>
      </div>
    </nav>

    <main class="container mx-auto px-4 py-8">
      <!-- Quick Actions -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <a href="/blog/editor/posts/new?type=blog" class="bg-gray-800 p-6 rounded-lg hover:bg-gray-700 transition">
          <h3 class="font-bold mb-2 text-white">New Blog Post</h3>
          <p class="text-gray-400 text-sm">Create a new blog article</p>
        </a>
        
        <a href="/blog/editor/posts/new?type=docs" class="bg-gray-800 p-6 rounded-lg hover:bg-gray-700 transition">
          <h3 class="font-bold mb-2 text-white">New Documentation</h3>
          <p class="text-gray-400 text-sm">Add documentation content</p>
        </a>
        
        <a href="/blog/editor/categories" class="bg-gray-800 p-6 rounded-lg hover:bg-gray-700 transition">
          <h3 class="font-bold mb-2 text-white">Manage Categories</h3>
          <p class="text-gray-400 text-sm">Organize your content</p>
        </a>
        
        <a href="/blog/editor/media" class="bg-gray-800 p-6 rounded-lg hover:bg-gray-700 transition">
          <h3 class="font-bold mb-2 text-white">Media Library</h3>
          <p class="text-gray-400 text-sm">Manage uploaded files</p>
        </a>
      </div>

      <!-- Recent Posts -->
      <section>
        <h2 class="text-2xl font-bold mb-4 text-white">Recent Posts</h2>
        <div class="bg-gray-800 rounded-lg overflow-hidden">
          <table class="w-full">
            <thead class="bg-gray-700">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Title</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Type</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Category</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Status</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Date</th>
                <th class="px-6 py-3 text-right text-xs font-medium text-gray-300 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-700">
              {(posts || []).slice(0, 10).map((post: any) => (
                <tr class="hover:bg-gray-700">
                  <td class="px-6 py-4">
                    <a href={`/blog/editor/posts/edit/${post.id}`} class="text-blue-400 hover:text-blue-300">
                      {post.title}
                    </a>
                  </td>
                  <td class="px-6 py-4">
                    <span class={`px-2 py-1 text-xs rounded-full ${
                      post.type === 'blog' ? 'bg-blue-900 text-blue-300' : 'bg-green-900 text-green-300'
                    }`}>
                      {post.type}
                    </span>
                  </td>
                  <td class="px-6 py-4 text-gray-400">
                    {post.category_data?.name || 'Uncategorized'}
                  </td>
                  <td class="px-6 py-4">
                    <span class={`px-2 py-1 text-xs rounded-full ${
                      post.published ? 'bg-green-900 text-green-300' : 'bg-yellow-900 text-yellow-300'
                    }`}>
                      {post.published ? 'Published' : 'Draft'}
                    </span>
                  </td>
                  <td class="px-6 py-4 text-gray-400">
                    {new Date(post.createdAt).toLocaleDateString()}
                  </td>
                  <td class="px-6 py-4 text-right">
                    <a href={`/${post.type}/${post.slug}`} target="_blank" class="text-gray-400 hover:text-white mr-3">
                      View
                    </a>
                    <a href={`/blog/editor/posts/edit/${post.id}`} class="text-blue-400 hover:text-blue-300">
                      Edit
                    </a>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
          
          {(posts || []).length === 0 && (
            <div class="text-center py-8 text-gray-400">
              No posts yet. Create your first post!
            </div>
          )}
        </div>
      </section>
    </main>
  </div>
</Layout>

<script>
  document.getElementById('logoutBtn')?.addEventListener('click', async () => {
    await fetch(`${import.meta.env.PUBLIC_API_URL || 'http://localhost:8749'}/api/auth/logout`, {
      method: 'POST',
      credentials: 'include'
    });
    window.location.href = '/blog/editor/login';
  });
</script>