---
import Layout from '../../layouts/Layout.astro';

// Fetch posts from API
const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:8749';
const currentCategory = Astro.url.searchParams.get('category');
const postsUrl = currentCategory 
  ? `${API_URL}/api/posts?type=blog&category=${currentCategory}`
  : `${API_URL}/api/posts?type=blog`;
const response = await fetch(postsUrl);
const posts = response.ok ? await response.json() : [];

// Fetch categories
const categoryResponse = await fetch(`${API_URL}/api/categories?type=blog`);
const categories = categoryResponse.ok ? await categoryResponse.json() : [];
---

<Layout title="Blog">
  <main class="container mx-auto px-4 py-8 max-w-7xl">
    <div class="mb-8">
      <h1 class="text-4xl font-bold mb-4">Blog</h1>
      
      <!-- Category Filter -->
      <div class="flex gap-2 flex-wrap">
        <a href="/blog" class={`px-4 py-2 rounded-full transition ${!currentCategory ? 'bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600'}`}>
          All
        </a>
        {categories.map((category: any) => (
          <a 
            href={`/blog?category=${category.slug}`} 
            class={`px-4 py-2 rounded-full transition ${currentCategory === category.slug ? 'bg-blue-600 text-white' : 'bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600'}`}
          >
            {category.name}
          </a>
        ))}
      </div>
    </div>

    <!-- Blog Posts Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {posts.map((post: any) => (
        <article class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition">
          {post.image && (
            <img 
              src={post.image} 
              alt={post.title}
              class="w-full h-48 object-cover"
            />
          )}
          <div class="p-6">
            <h2 class="text-xl font-semibold mb-2">
              <a href={`/blog/${post.slug}`} class="hover:text-blue-600 transition">
                {post.title}
              </a>
            </h2>
            <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-3">
              {post.excerpt || post.description}
            </p>
            <div class="flex justify-between items-center text-sm text-gray-500">
              <span>{new Date(post.publishDate || post.created_at).toLocaleDateString()}</span>
              {post.category_data && (
                <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                  {post.category_data.name}
                </span>
              )}
            </div>
          </div>
        </article>
      ))}
    </div>

    {posts.length === 0 && (
      <div class="text-center py-12 text-gray-500">
        <p>No blog posts found.</p>
      </div>
    )}
  </main>
</Layout>