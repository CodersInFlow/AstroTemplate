---
// Clean multi-tenant router
import { getTenantFromHost } from '../shared/lib/tenant';
import BlogList from '../shared/components/BlogList.astro';
import BlogPost from '../shared/components/BlogPost.astro';

// Get tenant from host header
const hostname = Astro.request.headers.get('host') || '127.0.0.1:4321';
const tenant = getTenantFromHost(hostname);
const tenantDir = tenant.directory || tenant.id;

// Get route
const { slug } = Astro.params;
const route = slug || 'index';

// Load site layout and config
const Layout = (await import(`../sites/${tenantDir}/layout.astro`)).default;
const config = (await import(`../sites/${tenantDir}/config.json`)).default;

// Handle blog routes
let blogSlug = null;
let category = null;

if (route === 'blog') {
  // Blog listing
  category = Astro.url.searchParams.get('category');
}

if (route.startsWith('blog/')) {
  // Individual blog post
  blogSlug = route.replace('blog/', '');
}

// Try to load custom page component for this tenant/route
let PageComponent = null;
let pageProps = {};

try {
  // Try to load a custom page for this route
  const pagePath = `../sites/${tenantDir}/pages/${route}.astro`;
  PageComponent = (await import(/* @vite-ignore */ pagePath)).default;
} catch (e) {
  // No custom page exists, use default content
}

// Default page content if no custom page
const title = route === 'index' ? config.name : 
             route === 'blog' ? 'Blog' :
             route.startsWith('blog/') ? 'Blog Post' :
             route.charAt(0).toUpperCase() + route.slice(1);
---

{PageComponent ? (
  <PageComponent {...pageProps} />
) : (
  <Layout title={title}>
    <main class="container mx-auto px-4 py-8">
      {route === 'index' ? (
        <div>
          <h1 class="text-5xl font-bold mb-4">Welcome to {config.name}</h1>
          <p class="text-xl mb-8">This is the {tenantDir} site.</p>
          <div class="mt-8">
            <a href="/blog" class="bg-blue-600 text-white px-6 py-3 rounded-lg inline-block hover:bg-blue-700">
              Visit Blog
            </a>
          </div>
        </div>
      ) : route === 'blog' ? (
        <div>
          <h1 class="text-4xl font-bold mb-8">Blog</h1>
          <BlogList database={tenant.database} category={category} />
        </div>
      ) : route.startsWith('blog/') ? (
        <BlogPost slug={blogSlug} database={tenant.database} />
      ) : (
        <div>
          <h1 class="text-4xl font-bold mb-4">{title}</h1>
          <p class="text-gray-400">This is the {route} page for {config.name}.</p>
        </div>
      )}
    </main>
  </Layout>
)}