---
// Shared blog listing component
export interface Props {
  database: string;
  apiUrl?: string;
  category?: string;
}

const { database, apiUrl = 'http://127.0.0.1:3001', category } = Astro.props;

// Fetch blog posts
const url = category 
  ? `${apiUrl}/api/posts?type=blog&category=${category}`
  : `${apiUrl}/api/posts?type=blog`;

const response = await fetch(url, {
  headers: {
    'X-Site-Database': database
  }
});

const posts = response.ok ? await response.json() : [];

// Fetch categories
const catResponse = await fetch(`${apiUrl}/api/categories?type=blog`, {
  headers: {
    'X-Site-Database': database
  }
});
const categories = catResponse.ok ? await catResponse.json() : [];
---

<div>
  <!-- Category Filter -->
  <div class="flex gap-2 flex-wrap mb-8">
    <a href="/blog" class={`blog-category-btn px-4 py-2 rounded-full transition ${!category ? 'blog-category-active' : ''}`}>
      All
    </a>
    {categories.map((cat: any) => (
      <a 
        href={`/blog?category=${cat.slug}`} 
        class={`blog-category-btn px-4 py-2 rounded-full transition ${category === cat.slug ? 'blog-category-active' : ''}`}
      >
        {cat.name}
      </a>
    ))}
  </div>

  <!-- Blog Posts Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {posts.map((post: any) => (
      <a href={`/blog/${post.slug}`} class="block">
        <article class="blog-card rounded-lg p-6 transition h-full">
          <h2 class="blog-card-title text-xl font-bold mb-2">{post.title}</h2>
          <p class="blog-excerpt mb-4">{post.excerpt || ''}</p>
          <div class="blog-date text-sm">
            {new Date(post.createdAt).toLocaleDateString()}
          </div>
        </article>
      </a>
    ))}
  </div>
</div>