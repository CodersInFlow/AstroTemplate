# Host nginx configuration for codersinflow.com
# Place this in /etc/nginx/sites-available/ on your server

upstream codersinflow_backend {
    server 127.0.0.1:4001;
    keepalive 64;
}

# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name codersinflow.com www.codersinflow.com;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name codersinflow.com www.codersinflow.com;
    
    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/codersinflow.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/codersinflow.com/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    client_max_body_size 100M;
    
    # Logging
    access_log /var/log/nginx/codersinflow.com.access.log;
    error_log /var/log/nginx/codersinflow.com.error.log;
    
    # Frontend static files (served from container's mounted volume)
    location / {
        root /var/www/codersinflow.com/dist;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API proxy to Docker container
    location /api {
        proxy_pass http://codersinflow_backend;
        proxy_http_version 1.1;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable buffering for SSE/WebSocket
        proxy_buffering off;
        
        # Don't cache API responses
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Uploaded files (served from container's mounted volume)
    location /uploads {
        alias /var/www/codersinflow.com/uploads;
        expires 30d;
        add_header Cache-Control "public";
    }
    
    # Health check endpoint (proxied to container)
    location /health {
        access_log off;
        proxy_pass http://codersinflow_backend/api/health;
    }
}