version: '3.8'

services:
  codersinflow:
    build:
      context: .
      dockerfile: Dockerfile.all-in-one
      args:
        PUBLIC_API_URL: ${PUBLIC_API_URL:-https://codersinflow.com/api}
    container_name: codersinflow-all
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Persistent data
      - ./runtime/mongodb:/data/db
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      
      # Logs from container
      - ./logs/supervisor:/var/log/supervisor
      
      # SSL certificates (if using Let's Encrypt)
      - /etc/letsencrypt:/etc/letsencrypt:ro
      
      # Optional: For live config updates without rebuild
      - ./site.config.json:/app/site.config.json:ro
      
    environment:
      # MongoDB
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_URI: mongodb://admin:${MONGO_PASSWORD}@127.0.0.1:27017/codersblog?authSource=admin
      
      # Backend
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: production
      PORT: 3001
      
      # Admin user (optional - created on first run)
      ADMIN_EMAIL: ${ADMIN_EMAIL:-}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-}
      
      # Site configuration
      DOMAIN: ${DOMAIN:-codersinflow.com}
      PUBLIC_API_URL: ${PUBLIC_API_URL:-https://codersinflow.com/api}
      
    restart: unless-stopped
    
    # Resource limits (optional - adjust based on your server)
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '2.0'
    #       memory: 4G
    #     reservations:
    #       cpus: '0.5'
    #       memory: 512M
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Optional: External network if you want to connect other containers
# networks:
#   default:
#     external:
#       name: web