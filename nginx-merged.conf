server {
    # Redirect HTTP to HTTPS
    listen 80;
    listen [::]:80;
    server_name codersinflow.com www.codersinflow.com;
    return 301 https://$host$request_uri;
}

server {
    # HTTPS configuration
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include snippets/block-middleware-subrequest.conf;

    # Define the server names
    server_name codersinflow.com www.codersinflow.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/codersinflow.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/codersinflow.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/codersinflow.com/chain.pem;

    # Recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Set the root directory for static files
    root /var/www/codersinflow.com/dist/client;

    # Define the index files
    index index.html index.htm;

    # Add logs for debugging and access tracking
    access_log /var/log/nginx/codersinflow.com.access.log;
    error_log /var/log/nginx/codersinflow.com.error.log;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Include Codersinflow unified server location blocks
    include /etc/nginx/includes/codersinflow-locations.conf;

    # Proxy API requests to the Go backend (blog API)
    location /api/ {
        proxy_pass http://localhost:8749;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Important for cookies/auth
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }

    # Serve uploaded images (blog uploads)
    location /uploads/ {
        proxy_pass http://localhost:8749;
        proxy_cache_valid 200 1d;
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
    }

    # Downloads directory - ensure it's accessible
    location /downloads/ {
        autoindex off;
        try_files $uri $uri/ =404;
        
        # Add headers for download files
        add_header Content-Disposition "attachment";
    }

    # Serve static assets directly
    location /_astro/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Serve other static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|vsix)$ {
        expires 30d;
        add_header Cache-Control "public";
        
        # Special handling for .vsix files
        location ~* \.vsix$ {
            add_header Content-Type "application/vsix";
            add_header Content-Disposition "attachment";
        }
    }

    # Main location block - try static files first, then proxy to Astro server
    location / {
        try_files $uri @astro;
    }

    location @astro {
        proxy_pass http://localhost:4321;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Redirect www to non-www
    if ($host = www.codersinflow.com) {
        return 301 https://codersinflow.com$request_uri;
    }
}
