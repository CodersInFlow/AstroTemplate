/* empty css                                  */
import { e as createAstro, f as createComponent, m as maybeRenderHead, h as addAttribute, l as renderScript, r as renderTemplate, k as renderComponent } from '../chunks/astro/server_CDr6vjmS.mjs';
import 'kleur/colors';
import { $ as $$Layout } from '../chunks/Layout_BjA0HMLQ.mjs';
import { $ as $$HeaderSimple } from '../chunks/HeaderSimple_snQXYYaq.mjs';
import { $ as $$Footer } from '../chunks/Footer_Wr9PnmAU.mjs';
import 'clsx';
export { renderers } from '../renderers.mjs';

const $$Astro = createAstro("https://codersinflow.com");
const $$DetailedFeatureCard = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$DetailedFeatureCard;
  const { title, description, features, imageSrc, imageAlt, reverse = false, gradient = "from-gray-800 to-gray-900", videoSrc, youtubeUrl } = Astro2.props;
  return renderTemplate`${maybeRenderHead()}<div${addAttribute(`w-full py-16 ${reverse ? "bg-gray-900" : "bg-gray-950"}`, "class")}> <div class="max-w-7xl mx-auto px-4"> <div${addAttribute(`flex flex-col lg:flex-row items-center gap-12 ${reverse ? "lg:flex-row-reverse" : ""}`, "class")}> <!-- Content Side --> <div class="flex-1 max-w-2xl"> <h2 class="text-4xl md:text-5xl font-bold text-white mb-6">${title}</h2> <p class="text-xl text-gray-300 mb-8">${description}</p> <ul class="space-y-4"> ${features.map((feature) => renderTemplate`<li class="flex items-start"> <div class="flex-shrink-0 w-6 h-6 rounded-full bg-indigo-600 flex items-center justify-center mt-0.5"> <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path> </svg> </div> <span class="ml-3 text-gray-300 text-lg">${feature}</span> </li>`)} </ul> </div> <!-- Image/Visual Side --> <div class="flex-1 max-w-2xl"> ${videoSrc ? renderTemplate`<div class="space-y-4"> <video class="w-full h-auto rounded-lg shadow-2xl lazy-video" controls loop muted autoplay playsinline preload="none"${addAttribute(videoSrc, "data-src")}> <source${addAttribute(videoSrc, "data-src")} type="video/mp4"> <source${addAttribute(videoSrc, "data-src")} type="video/quicktime">
Your browser does not support the video tag.
</video> ${youtubeUrl && renderTemplate`<a${addAttribute(youtubeUrl, "href")} target="_blank" rel="noopener noreferrer" class="inline-flex items-center justify-center w-full px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-semibold rounded-lg transition-colors shadow-lg"> <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24"> <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"></path> </svg>
Click for Full Video on YouTube
</a>`} </div>` : imageSrc ? renderTemplate`<img${addAttribute(imageSrc, "src")}${addAttribute(imageAlt || title, "alt")} class="w-full h-auto rounded-lg shadow-2xl">` : renderTemplate`<div${addAttribute(`relative h-96 rounded-lg bg-gradient-to-br ${gradient} overflow-hidden`, "class")}> <!-- Placeholder visual - can be replaced with actual screenshots --> <div class="absolute inset-0 opacity-10"> <div class="grid grid-cols-8 gap-2 p-4"> ${[...Array(64)].map((_, i) => renderTemplate`<div class="h-8 bg-white/20 rounded"></div>`)} </div> </div> <div class="absolute inset-0 flex items-center justify-center"> <div class="text-white/20 text-6xl font-bold">${title.split(" ")[0]}</div> </div> </div>`} </div> </div> </div> </div> ${renderScript($$result, "/Users/prestongarrison/Source/convert/codersinflow.com/src/components/DetailedFeatureCard.astro?astro&type=script&index=0&lang.ts")}`;
}, "/Users/prestongarrison/Source/convert/codersinflow.com/src/components/DetailedFeatureCard.astro", void 0);

const hero = {"title":"Powerful Features for Modern Development","description":"Discover why Coders In Flow is the most advanced AI coding assistant available. Every feature is designed to make you more productive."};
const features = [{"id":"multitasking","title":"True Multi-Tasking Architecture","description":"Run 20+ AI tasks simultaneously without any interference. Each task maintains its own context, model selection, and permissions - true parallel processing for lightning-fast development.","features":["Run 20+ concurrent tasks without interference","Complete task isolation with zero shared state","Parent-child task relationships with result aggregation","Automatic load balancing across resources","Independent context windows per task"],"gradient":"from-blue-900 to-indigo-900","videoSrc":"/videos/ClaudeCode KanBan.mp4","youtubeUrl":"https://www.youtube.com/watch?v=YOUR_VIDEO_ID_1","reverse":false},{"id":"codebase-intelligence","title":"Intelligent Codebase Understanding","description":"AI analyzes and documents your entire codebase on startup, creating a deep understanding that dramatically reduces token usage and improves response accuracy.","features":["Automatic documentation generation on startup","Framework-specific intelligence and pattern detection","Project summary and architecture mapping","50%+ reduction in token usage","Smart dependency and relationship mapping"],"gradient":"from-purple-900 to-pink-900","videoSrc":"/videos/Code Analysis.mov","youtubeUrl":"https://www.youtube.com/watch?v=YOUR_VIDEO_ID_2","reverse":true},{"id":"git-management","title":"Shadow Git with Selective Staging","description":"Perfect human-AI collaboration with our shadow git system. Review and selectively apply AI changes at the chunk level for complete control over your codebase.","features":["Automatic git checkpoints after AI operations","Chunk-level change control and staging","Accept or refuse specific modifications","Task-scoped history linking","Instant rollback to any checkpoint"],"gradient":"from-green-900 to-emerald-900","videoSrc":"/videos/ClaudeCode Modify.mp4","youtubeUrl":"https://www.youtube.com/watch?v=YOUR_VIDEO_ID_3","reverse":false},{"id":"mobile-apps","title":"Native Mobile Development","description":"Continue coding on the go with our native iOS and Android apps. Full task management, real-time sync, and all the power of Coders In Flow in your pocket.","features":["Native iOS and Android applications","Real-time WebSocket synchronization","Seamless desktop-to-mobile continuity","Offline task queuing and sync","Push notifications for task completion"],"gradient":"from-cyan-900 to-blue-900","videoSrc":"/videos/Claude Code.mov","youtubeUrl":"https://www.youtube.com/watch?v=YOUR_VIDEO_ID_4","reverse":true},{"id":"context-control","title":"Advanced Context Management","description":"Revolutionary context management with AI self-editing capabilities. The AI intelligently prunes unnecessary information in real-time, dramatically reducing costs.","features":["AI-controlled context self-editing","Dynamic optimization during conversations","Multi-strategy truncation options","Token-perfect counting for every model","Visual context editor for manual control"],"gradient":"from-orange-900 to-red-900","videoSrc":"/videos/ClaudeCode KanBan.mp4","youtubeUrl":"https://www.youtube.com/watch?v=YOUR_VIDEO_ID_5","reverse":false},{"id":"enterprise-cloud","title":"Enterprise Cloud & Team Management","description":"Complete cloud synchronization with powerful team management capabilities. Monitor productivity, control access, and track ROI across your entire development team.","features":["Real-time developer productivity tracking","Centralized model access control","Comprehensive analytics dashboard","SOC2 compliant infrastructure","Automatic cloud backup and sync"],"gradient":"from-indigo-900 to-purple-900","videoSrc":"/videos/ClaudeCode Modify.mp4","youtubeUrl":"https://www.youtube.com/watch?v=YOUR_VIDEO_ID_6","reverse":true},{"id":"provider-system","title":"Dynamic Provider System","description":"Unlike competitors with hardcoded providers, our JSON-based system allows instant provider addition without code changes. Add any AI provider in minutes.","features":["20+ AI providers out of the box","Add new providers via JSON configuration","Automatic model discovery and updates","No recompilation needed for changes","Support for custom and local models"],"gradient":"from-teal-900 to-cyan-900","videoSrc":"/videos/Code Analysis.mov","youtubeUrl":"https://www.youtube.com/watch?v=YOUR_VIDEO_ID_7","reverse":false}];
const cta = {"title":"Ready to Experience These Features?","description":"Join thousands of developers who are already coding faster with AI.","buttonText":"Install Now","buttonLink":"/download"};
const detailedFeaturesData = {
  hero,
  features,
  cta,
};

const $$Features = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Features - Coders In Flow AI-Powered Pair Programming", "description": "Explore all the powerful features of Coders In Flow - from multi-tasking AI to enterprise team management", "keywords": "AI coding features, multi-tasking, Claude Code integration, semantic search, git integration, mobile app, enterprise features" }, { "default": ($$result2) => renderTemplate`  ${renderComponent($$result2, "Header", $$HeaderSimple, {})}  ${maybeRenderHead()}<div class="pt-14 bg-gray-950"> <div class="max-w-7xl mx-auto py-16 px-4 text-center"> <h1 class="text-5xl md:text-6xl font-bold text-white mb-6"> ${detailedFeaturesData.hero.title} </h1> <p class="text-xl text-gray-300 max-w-3xl mx-auto"> ${detailedFeaturesData.hero.description} </p> </div> </div>  ${detailedFeaturesData.features.map((feature) => renderTemplate`<div${addAttribute(feature.id, "id")}> ${renderComponent($$result2, "DetailedFeatureCard", $$DetailedFeatureCard, { "title": feature.title, "description": feature.description, "features": feature.features, "gradient": feature.gradient, "videoSrc": feature.videoSrc, "youtubeUrl": feature.youtubeUrl, "reverse": feature.reverse })} </div>`)} <div class="bg-gray-950 py-16"> <div class="max-w-4xl mx-auto text-center px-4"> <h2 class="text-3xl font-bold text-white mb-6">${detailedFeaturesData.cta.title}</h2> <p class="text-xl text-gray-300 mb-8">${detailedFeaturesData.cta.description}</p> <a${addAttribute(detailedFeaturesData.cta.buttonLink, "href")} class="inline-block px-8 py-3 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition-colors"> ${detailedFeaturesData.cta.buttonText} </a> </div> </div>  ${renderComponent($$result2, "Footer", $$Footer, {})} ` })}`;
}, "/Users/prestongarrison/Source/convert/codersinflow.com/src/pages/features.astro", void 0);

const $$file = "/Users/prestongarrison/Source/convert/codersinflow.com/src/pages/features.astro";
const $$url = "/features";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Features,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
